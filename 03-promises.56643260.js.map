{"version":3,"sources":["js/03-promises.js"],"names":["createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","console","log","Reject","form","document","querySelector","addEventListener","submit","preventDefault","amount","value","step","i"],"mappings":";AAAA,SAASA,EAAcC,EAAUC,GACzBC,MAAAA,EAAgBC,KAAKC,SAAW,GAC/B,OAAA,IAAIC,QAAQ,CAACC,EAASC,KACtBL,EACLI,EAAQE,QAAQC,2BAA2BT,QAAeC,QAE1DS,OAAOF,QAAQC,0BAA0BT,QAAeC,UAM5D,MAAMU,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,SAAU,KAC9BH,EAAKI,OAAOC,iBACNC,MAAAA,EAASN,EAAKM,OAAOC,MAErBjB,GADOU,EAAKQ,KAAKD,MACTP,EAAKV,MAAMiB,OACrBE,IAAAA,EAAG,EACAA,KAAAA,GAAKH,GAEVlB,IADAqB,EACgBnB","file":"03-promises.56643260.js","sourceRoot":"../src","sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n     if (shouldResolve) {\n    resolve(console.log(`✅ Fulfilled promise ${position} in ${delay}ms`))\n  } else {\n    Reject(console.log(`❌ Rejected promise ${position} in ${delay}ms`))\n  }\n  })\n  \n \n}\nconst form = document.querySelector(\".form\")\nform.addEventListener(\"submit\", () => {\n  form.submit.preventDefault()\n  const amount = form.amount.value\n  const step = form.step.value\n  const delay = form.delay.value\n  let i =1\n  while (i <= amount) {\n    i++\n    createPromise(i,delay)\n  }\n})"]}